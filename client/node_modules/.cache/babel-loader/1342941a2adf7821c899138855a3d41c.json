{"ast":null,"code":"var _jsxFileName = \"/Users/chloeolut/Desktop/webCoursework/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const classes = useStyles();\n\n  const handleSubmit = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: classes.form,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Add a post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags (coma separated)\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags (coma separated)\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref => {\n            let {\n              base64\n            } = _ref;\n            return setPostData({ ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), \"/>\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Form, \"RdtQ3I0GrCbXdwM6RlG1Gh0R1pI=\", false, function () {\n  return [useStyles];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/chloeolut/Desktop/webCoursework/client/src/components/Form/Form.js"],"names":["React","useState","TextField","Button","Typography","Paper","FileBase","useStyles","Form","postData","setPostData","creator","title","message","tags","selectedFile","classes","handleSubmit","paper","form","e","target","value","split","fileInput","base64","buttonSubmit","clear"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\n\n\nimport useStyles from './styles'; \n        \nconst Form = () => {\n        const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\n        const classes = useStyles();\n\n        const handleSubmit = () => {\n\n        }\n\n        return (\n            <Paper className={classes.paper}>\n                <form autoComplete=\"off\" noValidate className={classes.form} onSubmit={handleSubmit}>\n                <Typography variant=\"h6\">Add a post</Typography>\n                <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\n                <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n                <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n                <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\n                <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\n                <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n\n                />\n                </form>\n            </Paper>\n        );\n\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}